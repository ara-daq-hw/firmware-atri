// Automatically generated by interface_generator.pl
// Interface name: irswb
// Interface definition: irswb_interface.def
// Generation date/time: Tue Mar 27, 2012 20:57:43

/*
 * IRS-to-IRSWB interface.
 * 
 * This is the IRS-to-IRSWB interface. This interface will likely
 * be obsoleted when we move to the unified irs_quad_top arch.
*/

`include "irswb_interface.vh"
// BEGIN irswb irswb_irs DATE Tue Mar 27, 2012 20:57:43
// 
// wire irs_clk_o;
// wire wb_clk_i;
// wire enable_i;
// wire soft_trig_en_i;
// wire [1:0] rf_trig_en_i;
// wire [7:0] tsa_mon_o;
// wire tsa_mon_update_o;
// wire tsa_mon_start_i;
// wire [9:0] wilk_mon_o;
// wire wilk_mon_update_o;
// wire wilk_mon_start_i;
// wire ped_mode_i;
// wire [8:0] ped_address_i;
// wire ped_clear_i;
// wire [7:0] ch_mask_i;
// wire irs_mode_i;
// wire irs_rst_i;
// wire [11:0] sbbias_i;
// wire [11:0] wilkcnt_i;
// irswb_irs irswbif(.interface_io(interface_io),
//                   .irs_clk_i(irs_clk_o),
//                   .wb_clk_o(wb_clk_i),
//                   .enable_o(enable_i),
//                   .soft_trig_en_o(soft_trig_en_i),
//                   .rf_trig_en_o(rf_trig_en_i),
//                   .tsa_mon_i(tsa_mon_o),
//                   .tsa_mon_update_i(tsa_mon_update_o),
//                   .tsa_mon_start_o(tsa_mon_start_i),
//                   .wilk_mon_i(wilk_mon_o),
//                   .wilk_mon_update_i(wilk_mon_update_o),
//                   .wilk_mon_start_o(wilk_mon_start_i),
//                   .ped_mode_o(ped_mode_i),
//                   .ped_address_o(ped_address_i),
//                   .ped_clear_o(ped_clear_i),
//                   .ch_mask_o(ch_mask_i),
//                   .irs_mode_o(irs_mode_i),
//                   .irs_rst_o(irs_rst_i),
//                   .sbbias_o(sbbias_i),
//                   .wilkcnt_o(wilkcnt_i));
//
// END irswb irswb_irs DATE Tue Mar 27, 2012 20:57:43

module irswb_irs(
		inout [`IRSWBIF_SIZE-1:0] interface_io,
		input  irs_clk_i,
		output  wb_clk_o,
		output  enable_o,
		output  soft_trig_en_o,
		output  [1:0]  rf_trig_en_o,
		input  [7:0]  tsa_mon_i,
		input  tsa_mon_update_i,
		output  tsa_mon_start_o,
		input  [9:0]  wilk_mon_i,
		input  wilk_mon_update_i,
		output  wilk_mon_start_o,
		output  ped_mode_o,
		output  [8:0]  ped_address_o,
		output  ped_clear_o,
		output  [7:0]  ch_mask_o,
		output  irs_mode_o,
		output  irs_rst_o,
		output  [11:0]  sbbias_o,
		output  [11:0]  wilkcnt_o
		);

	assign interface_io[0] = irs_clk_i;
	assign wb_clk_o = interface_io[1];
	assign enable_o = interface_io[2];
	assign soft_trig_en_o = interface_io[3];
	assign rf_trig_en_o = interface_io[5:4];
	assign interface_io[13:6] = tsa_mon_i;
	assign interface_io[14] = tsa_mon_update_i;
	assign tsa_mon_start_o = interface_io[15];
	assign interface_io[25:16] = wilk_mon_i;
	assign interface_io[26] = wilk_mon_update_i;
	assign wilk_mon_start_o = interface_io[27];
	assign ped_mode_o = interface_io[28];
	assign ped_address_o = interface_io[37:29];
	assign ped_clear_o = interface_io[38];
	assign ch_mask_o = interface_io[46:39];
	assign irs_mode_o = interface_io[47];
	assign irs_rst_o = interface_io[48];
	assign sbbias_o = interface_io[60:49];
	assign wilkcnt_o = interface_io[72:61];

endmodule


//% Reassigns a irswb interface from a irswb_irs on A_i
module irswb_irs_reassign( A_i, B_o );
	inout [`IRSWBIF_SIZE-1:0] A_i;
	inout [`IRSWBIF_SIZE-1:0] B_o;

	assign B_o[0] = A_i[0];
	assign A_i[1] = B_o[1];
	assign A_i[2] = B_o[2];
	assign A_i[3] = B_o[3];
	assign A_i[5:4] = B_o[5:4];
	assign B_o[13:6] = A_i[13:6];
	assign B_o[14] = A_i[14];
	assign A_i[15] = B_o[15];
	assign B_o[25:16] = A_i[25:16];
	assign B_o[26] = A_i[26];
	assign A_i[27] = B_o[27];
	assign A_i[28] = B_o[28];
	assign A_i[37:29] = B_o[37:29];
	assign A_i[38] = B_o[38];
	assign A_i[46:39] = B_o[46:39];
	assign A_i[47] = B_o[47];
	assign A_i[48] = B_o[48];
	assign A_i[60:49] = B_o[60:49];
	assign A_i[72:61] = B_o[72:61];
endmodule

// BEGIN irswb irswb_wb DATE Tue Mar 27, 2012 20:57:43
// 
// wire irs_clk_i;
// wire wb_clk_o;
// wire enable_o;
// wire soft_trig_en_o;
// wire [1:0] rf_trig_en_o;
// wire [7:0] tsa_mon_i;
// wire tsa_mon_update_i;
// wire tsa_mon_start_o;
// wire [9:0] wilk_mon_i;
// wire wilk_mon_update_i;
// wire wilk_mon_start_o;
// wire ped_mode_o;
// wire [8:0] ped_address_o;
// wire ped_clear_o;
// wire [7:0] ch_mask_o;
// wire irs_mode_o;
// wire irs_rst_o;
// wire [11:0] sbbias_o;
// wire [11:0] wilkcnt_o;
// irswb_wb irswbif(.interface_io(interface_io),
//                  .irs_clk_o(irs_clk_i),
//                  .wb_clk_i(wb_clk_o),
//                  .enable_i(enable_o),
//                  .soft_trig_en_i(soft_trig_en_o),
//                  .rf_trig_en_i(rf_trig_en_o),
//                  .tsa_mon_o(tsa_mon_i),
//                  .tsa_mon_update_o(tsa_mon_update_i),
//                  .tsa_mon_start_i(tsa_mon_start_o),
//                  .wilk_mon_o(wilk_mon_i),
//                  .wilk_mon_update_o(wilk_mon_update_i),
//                  .wilk_mon_start_i(wilk_mon_start_o),
//                  .ped_mode_i(ped_mode_o),
//                  .ped_address_i(ped_address_o),
//                  .ped_clear_i(ped_clear_o),
//                  .ch_mask_i(ch_mask_o),
//                  .irs_mode_i(irs_mode_o),
//                  .irs_rst_i(irs_rst_o),
//                  .sbbias_i(sbbias_o),
//                  .wilkcnt_i(wilkcnt_o));
//
// END irswb irswb_wb DATE Tue Mar 27, 2012 20:57:43

module irswb_wb(
		inout [`IRSWBIF_SIZE-1:0] interface_io,
		output  irs_clk_o,
		input  wb_clk_i,
		input  enable_i,
		input  soft_trig_en_i,
		input  [1:0]  rf_trig_en_i,
		output  [7:0]  tsa_mon_o,
		output  tsa_mon_update_o,
		input  tsa_mon_start_i,
		output  [9:0]  wilk_mon_o,
		output  wilk_mon_update_o,
		input  wilk_mon_start_i,
		input  ped_mode_i,
		input  [8:0]  ped_address_i,
		input  ped_clear_i,
		input  [7:0]  ch_mask_i,
		input  irs_mode_i,
		input  irs_rst_i,
		input  [11:0]  sbbias_i,
		input  [11:0]  wilkcnt_i
		);

	assign irs_clk_o = interface_io[0];
	assign interface_io[1] = wb_clk_i;
	assign interface_io[2] = enable_i;
	assign interface_io[3] = soft_trig_en_i;
	assign interface_io[5:4] = rf_trig_en_i;
	assign tsa_mon_o = interface_io[13:6];
	assign tsa_mon_update_o = interface_io[14];
	assign interface_io[15] = tsa_mon_start_i;
	assign wilk_mon_o = interface_io[25:16];
	assign wilk_mon_update_o = interface_io[26];
	assign interface_io[27] = wilk_mon_start_i;
	assign interface_io[28] = ped_mode_i;
	assign interface_io[37:29] = ped_address_i;
	assign interface_io[38] = ped_clear_i;
	assign interface_io[46:39] = ch_mask_i;
	assign interface_io[47] = irs_mode_i;
	assign interface_io[48] = irs_rst_i;
	assign interface_io[60:49] = sbbias_i;
	assign interface_io[72:61] = wilkcnt_i;

endmodule


//% Reassigns a irswb interface from a irswb_wb on A_i
module irswb_wb_reassign( A_i, B_o );
	inout [`IRSWBIF_SIZE-1:0] A_i;
	inout [`IRSWBIF_SIZE-1:0] B_o;

	assign A_i[0] = B_o[0];
	assign B_o[1] = A_i[1];
	assign B_o[2] = A_i[2];
	assign B_o[3] = A_i[3];
	assign B_o[5:4] = A_i[5:4];
	assign A_i[13:6] = B_o[13:6];
	assign A_i[14] = B_o[14];
	assign B_o[15] = A_i[15];
	assign A_i[25:16] = B_o[25:16];
	assign A_i[26] = B_o[26];
	assign B_o[27] = A_i[27];
	assign B_o[28] = A_i[28];
	assign B_o[37:29] = A_i[37:29];
	assign B_o[38] = A_i[38];
	assign B_o[46:39] = A_i[46:39];
	assign B_o[47] = A_i[47];
	assign B_o[48] = A_i[48];
	assign B_o[60:49] = A_i[60:49];
	assign B_o[72:61] = A_i[72:61];
endmodule

// BEGIN irswb irswb_debug DATE Tue Mar 27, 2012 20:57:43
// 
// wire irs_clk_i;
// wire wb_clk_i;
// wire enable_i;
// wire soft_trig_en_i;
// wire [1:0] rf_trig_en_i;
// wire [7:0] tsa_mon_i;
// wire tsa_mon_update_i;
// wire tsa_mon_start_i;
// wire [9:0] wilk_mon_i;
// wire wilk_mon_update_i;
// wire wilk_mon_start_i;
// wire ped_mode_i;
// wire [8:0] ped_address_i;
// wire ped_clear_i;
// wire [7:0] ch_mask_i;
// wire irs_mode_i;
// wire irs_rst_i;
// wire [11:0] sbbias_i;
// wire [11:0] wilkcnt_i;
// irswb_debug irswbif(.interface_io(interface_io),
//                     .irs_clk_o(irs_clk_i),
//                     .wb_clk_o(wb_clk_i),
//                     .enable_o(enable_i),
//                     .soft_trig_en_o(soft_trig_en_i),
//                     .rf_trig_en_o(rf_trig_en_i),
//                     .tsa_mon_o(tsa_mon_i),
//                     .tsa_mon_update_o(tsa_mon_update_i),
//                     .tsa_mon_start_o(tsa_mon_start_i),
//                     .wilk_mon_o(wilk_mon_i),
//                     .wilk_mon_update_o(wilk_mon_update_i),
//                     .wilk_mon_start_o(wilk_mon_start_i),
//                     .ped_mode_o(ped_mode_i),
//                     .ped_address_o(ped_address_i),
//                     .ped_clear_o(ped_clear_i),
//                     .ch_mask_o(ch_mask_i),
//                     .irs_mode_o(irs_mode_i),
//                     .irs_rst_o(irs_rst_i),
//                     .sbbias_o(sbbias_i),
//                     .wilkcnt_o(wilkcnt_i));
//
// END irswb irswb_debug DATE Tue Mar 27, 2012 20:57:43

module irswb_debug(
		inout [`IRSWBIF_SIZE-1:0] interface_io,
		output  irs_clk_o,
		output  wb_clk_o,
		output  enable_o,
		output  soft_trig_en_o,
		output  [1:0]  rf_trig_en_o,
		output  [7:0]  tsa_mon_o,
		output  tsa_mon_update_o,
		output  tsa_mon_start_o,
		output  [9:0]  wilk_mon_o,
		output  wilk_mon_update_o,
		output  wilk_mon_start_o,
		output  ped_mode_o,
		output  [8:0]  ped_address_o,
		output  ped_clear_o,
		output  [7:0]  ch_mask_o,
		output  irs_mode_o,
		output  irs_rst_o,
		output  [11:0]  sbbias_o,
		output  [11:0]  wilkcnt_o
		);

	assign irs_clk_o = interface_io[0];
	assign wb_clk_o = interface_io[1];
	assign enable_o = interface_io[2];
	assign soft_trig_en_o = interface_io[3];
	assign rf_trig_en_o = interface_io[5:4];
	assign tsa_mon_o = interface_io[13:6];
	assign tsa_mon_update_o = interface_io[14];
	assign tsa_mon_start_o = interface_io[15];
	assign wilk_mon_o = interface_io[25:16];
	assign wilk_mon_update_o = interface_io[26];
	assign wilk_mon_start_o = interface_io[27];
	assign ped_mode_o = interface_io[28];
	assign ped_address_o = interface_io[37:29];
	assign ped_clear_o = interface_io[38];
	assign ch_mask_o = interface_io[46:39];
	assign irs_mode_o = interface_io[47];
	assign irs_rst_o = interface_io[48];
	assign sbbias_o = interface_io[60:49];
	assign wilkcnt_o = interface_io[72:61];

endmodule


